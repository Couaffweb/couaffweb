{"version":3,"sources":["pages/web/Services/EditService.js","pages/web/Services/apis.js","pages/web/Services/constants.js"],"names":["EditService","location","serviceDetails","state","history","useHistory","useState","service","setService","image","serviceImage","setServiceImage","serviceValue","formError","setFormError","loading","setLoading","to","classNameName","isShow","className","name","handleFile","target","files","URL","createObjectURL","checkError","value","checkRequiredField","removeError","handleInput","handleSubmit","event","preventDefault","errors","checkAllRequiredFieldsWithKey","Object","values","some","length","checkAllField","updateService","then","message","notify","addNotification","alertMessage","title","push","catch","type","finally","isEdit","memo","addService","data","formData","FormData","append","price","category_id","description","POST","getAllService","GET","limit","deleteService","id","Delete","removeService","PUT","editService"],"mappings":"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","file":"static/js/edit-service.b05a6983.chunk.js","sourcesContent":["import React, { memo, useState } from 'react';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { ReactLoading, AddServiceForm } from 'component';\nimport {\n\tcheckRequiredField,\n\tcheckAllRequiredFieldsWithKey,\n\talertMessage,\n} from 'utils';\nimport { store as notify } from 'react-notifications-component';\nimport { serviceValue } from './constants';\nimport { updateService } from './apis';\nconst EditService = ({ location }) => {\n\tconst { serviceDetails } = location.state;\n\tconst history = useHistory();\n\tconst [service, setService] = useState({ ...serviceDetails });\n\tconst [serviceImage, setServiceImage] = useState(serviceDetails.image);\n\tconst [formError, setFormError] = useState(serviceValue);\n\tconst [loading, setLoading] = useState(false);\n\tif (!location.state) {\n\t\treturn <Redirect to='/services' />;\n\t}\n\tconst handleFile = ({ target: { name, files } }) => {\n\t\tsetService({ ...service, [name]: files[0] });\n\t\tsetServiceImage(URL.createObjectURL(files[0]));\n\t};\n\tconst handleInput = ({ target: { name, value } }) => {\n\t\tsetService({ ...service, [name]: value });\n\t};\n\tconst removeError = ({ target: { name } }) => {\n\t\tsetFormError({ ...formError, [name]: '' });\n\t};\n\tconst checkError = ({ target: { name, value } }) => {\n\t\tsetFormError({ ...formError, ...checkRequiredField(name, value) });\n\t};\n\tconst checkAllField = () => {\n\t\tconst errors = checkAllRequiredFieldsWithKey(serviceValue, service);\n\t\tsetFormError({ ...formError, ...errors });\n\t\treturn Object.values(errors).some((value) => value.length > 0);\n\t};\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tif (!checkAllField()) {\n\t\t\tsetLoading(true);\n\t\t\tupdateService(service)\n\t\t\t\t.then(({ message }) => {\n\t\t\t\t\tnotify.addNotification(\n\t\t\t\t\t\talertMessage({\n\t\t\t\t\t\t\ttitle: 'Success',\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\thistory.push('/services');\n\t\t\t\t})\n\t\t\t\t.catch(({ message }) => {\n\t\t\t\t\tnotify.addNotification(\n\t\t\t\t\t\talertMessage({ title: 'error', message, type: 'danger' })\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t});\n\t\t}\n\t};\n\treturn (\n\t\t<div classNameName='container container-all'>\n\t\t\t<ReactLoading isShow={loading} />\n\t\t\t<div classNameName='row'>\n\t\t\t\t<div classNameName='col-lg-8'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t<h1 className='d-flex justify-content-center'>\n\t\t\t\t\t\t\t\tUpdate Service ({service.name})\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<hr className='line' />\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col-md-6 offset-md-3'>\n\t\t\t\t\t\t\t\t\t<AddServiceForm\n\t\t\t\t\t\t\t\t\t\thandleFile={handleFile}\n\t\t\t\t\t\t\t\t\t\tcheckError={checkError}\n\t\t\t\t\t\t\t\t\t\tremoveError={removeError}\n\t\t\t\t\t\t\t\t\t\tformError={formError}\n\t\t\t\t\t\t\t\t\t\tservice={service}\n\t\t\t\t\t\t\t\t\t\thandleInput={handleInput}\n\t\t\t\t\t\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\t\t\t\t\t\tserviceImage={serviceImage}\n\t\t\t\t\t\t\t\t\t\tisEdit\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default memo(EditService);\n","import { POST, GET, Delete, PUT } from 'utils';\nimport {\n\tservice,\n\tremoveService,\n\teditService,\n\tstripeConnect,\n} from 'constants/apiEndpoint';\nexport const addService = (data) => {\n\tconst formData = new FormData();\n\tformData.append('name', data.name);\n\tformData.append('price', data.price);\n\tformData.append('category_id', data.category_id);\n\tformData.append('image', data.image);\n\tformData.append('description', data.description);\n\treturn POST(service, formData);\n};\n\nexport const getAllService = () => GET(service, { limit: 30 });\nexport const deleteService = (id) => Delete(removeService(id));\nexport const updateService = (data) => {\n\tconst formData = new FormData();\n\tformData.append('name', data.name);\n\tformData.append('price', data.price);\n\tformData.append('category_id', data.category_id);\n\tformData.append('image', data.image);\n\tformData.append('description', data.description);\n\treturn PUT(editService(data.id), formData);\n};\n\nexport const stripeConnectSuccess = (data) => POST(stripeConnect, data);\n","export const serviceValue = {\n\tname: '',\n\tprice: '',\n\timage: '',\n\tcategory_id: '',\n\tdescription: '',\n};\n"],"sourceRoot":""}