{"version":3,"sources":["pages/web/Services/index.js","pages/web/Services/apis.js"],"names":["GetServices","history","useHistory","useState","loading","setLoading","apiLoading","setApiLoading","myService","setMyService","useEffect","getServicesData","getAllService","then","result","data","catch","finally","className","isShow","map","val","height","width","index","id","name","image","price","rest","url","alt","onClick","serviceDetails","push","Alert","title","text","icon","buttons","dangerMode","willDelete","deleteService","newService","splice","message","notify","addNotification","alertMessage","type","removeService","memo","addService","formData","FormData","append","category_id","description","POST","service","GET","limit","Delete","updateService","PUT","editService"],"mappings":"6OASMA,EAAc,WACnB,IAAMC,EAAUC,cADS,EAEKC,oBAAS,GAFd,mBAElBC,EAFkB,KAETC,EAFS,OAGWF,oBAAS,GAHpB,mBAGlBG,EAHkB,KAGNC,EAHM,OAISJ,mBAAS,IAJlB,mBAIlBK,EAJkB,KAIPC,EAJO,KAKzBC,qBAAU,WACTC,MACE,IACH,IAAMA,EAAkB,WACvBC,cACEC,MAAK,YAA2B,IAAhBC,EAAe,EAAvBC,KAAQD,OAChBL,EAAaK,MAEbE,QACAC,SAAQ,WACRZ,GAAW,OAsCd,OACC,qBAAKa,UAAU,0BAAf,SACC,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,kBAAf,SACC,sBAAKA,UAAU,MAAf,UACC,cAAC,IAAD,CAAcC,OAAQb,IACtB,qBAAKY,UAAU,iBAAf,SACC,+CAEAd,EACE,CAAC,EAAG,EAAG,GAAGgB,KAAI,SAACC,GAAD,OACd,qBAAKH,UAAU,gBAAf,SACC,sBAAKA,UAAU,OAAf,UACC,cAAC,IAAD,CAAUI,OAAQ,MAClB,sBAAKJ,UAAU,YAAf,UACC,oBAAIA,UAAU,aAAd,SACC,cAAC,IAAD,CAAUK,MAAO,QAElB,mBAAGL,UAAU,YAAb,SACC,cAAC,IAAD,CAAUK,MAAO,eAReF,MAcpCb,EAAUY,KAAI,WAAsCI,GAAtC,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,MAAUC,EAA9B,oDACd,qBAAKX,UAAU,gBAAf,SACC,sBAAKA,UAAU,OAAf,UACC,cAAC,IAAD,CACCA,UAAU,mCACVY,IAAKH,GAAS,qCACdI,IAAI,iBACJT,OAAO,UAER,sBAAKJ,UAAU,YAAf,UACC,oBAAIA,UAAU,aAAd,SAA4BQ,IAC5B,oBAAGR,UAAU,YAAb,UACC,4CADD,KAC2BU,QAG5B,qBAAKV,UAAU,cAAf,SACC,sBAAKA,UAAU,iCAAf,UACC,wBACCA,UAAU,eACVc,QAAS,kBA/CCC,EAgDK,aAAER,KAAIC,OAAMC,QAAOC,SAAUC,QA/CxD5B,EAAQiC,KAAK,gBAAiB,CAAED,mBADX,IAACA,GA6CX,oBAOU,IACV,wBACCf,UAAU,iBACVc,QAAS,kBAvFA,SAACP,EAAID,GAC1BW,IAAM,CACLC,MAAO,4CACPC,KAAM,GACNC,KAAM,UACNC,SAAS,EACTC,YAAY,IACV3B,MAAK,SAAC4B,GACJA,GACHlC,GAAc,GACdmC,YAAcjB,GACZZ,MAAK,WACL,IAAM8B,EAAU,YAAOnC,GACvBmC,EAAWC,OAAOpB,EAAO,GACzBf,EAAa,YAAIkC,IACjBR,IAAM,+BAAgC,CACrCG,KAAM,eAGPtB,OAAM,YAAkB,IAAf6B,EAAc,EAAdA,QACTC,QAAOC,gBACNC,YAAa,CAAEZ,MAAO,QAASS,UAASI,KAAM,eAG/ChC,SAAQ,WACRV,GAAc,OAGhB4B,IAAM,kCA2DmBe,CAAczB,EAAID,IAFlC,6BAxBgCC,gBA0C9B0B,yBAAKnD,I,gCClIpB,4JAOaoD,EAAa,SAACrC,GAC1B,IAAMsC,EAAW,IAAIC,SAMrB,OALAD,EAASE,OAAO,OAAQxC,EAAKW,MAC7B2B,EAASE,OAAO,QAASxC,EAAKa,OAC9ByB,EAASE,OAAO,cAAexC,EAAKyC,aACpCH,EAASE,OAAO,QAASxC,EAAKY,OAC9B0B,EAASE,OAAO,cAAexC,EAAK0C,aAC7BC,YAAKC,IAASN,IAGTzC,EAAgB,kBAAMgD,YAAID,IAAS,CAAEE,MAAO,MAC5CnB,EAAgB,SAACjB,GAAD,OAAQqC,YAAOZ,YAAczB,KAC7CsC,EAAgB,SAAChD,GAC7B,IAAMsC,EAAW,IAAIC,SAMrB,OALAD,EAASE,OAAO,OAAQxC,EAAKW,MAC7B2B,EAASE,OAAO,QAASxC,EAAKa,OAC9ByB,EAASE,OAAO,cAAexC,EAAKyC,aACpCH,EAASE,OAAO,QAASxC,EAAKY,OAC9B0B,EAASE,OAAO,cAAexC,EAAK0C,aAC7BO,YAAIC,YAAYlD,EAAKU,IAAK4B","file":"static/js/service.4317cc6b.chunk.js","sourcesContent":["import React, { memo, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport Skeleton from 'react-loading-skeleton';\nimport Alert from 'sweetalert';\nimport { store as notify } from 'react-notifications-component';\nimport { alertMessage } from 'utils';\nimport { Image, ReactLoading } from 'component';\n\nimport { getAllService, deleteService } from './apis';\nconst GetServices = () => {\n\tconst history = useHistory();\n\tconst [loading, setLoading] = useState(true);\n\tconst [apiLoading, setApiLoading] = useState(false);\n\tconst [myService, setMyService] = useState([]);\n\tuseEffect(() => {\n\t\tgetServicesData();\n\t}, []);\n\tconst getServicesData = () => {\n\t\tgetAllService()\n\t\t\t.then(({ data: { result } }) => {\n\t\t\t\tsetMyService(result);\n\t\t\t})\n\t\t\t.catch()\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t};\n\tconst removeService = (id, index) => {\n\t\tAlert({\n\t\t\ttitle: 'Are you sure want to delete this service?',\n\t\t\ttext: '',\n\t\t\ticon: 'warning',\n\t\t\tbuttons: true,\n\t\t\tdangerMode: true,\n\t\t}).then((willDelete) => {\n\t\t\tif (willDelete) {\n\t\t\t\tsetApiLoading(true);\n\t\t\t\tdeleteService(id)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tconst newService = [...myService];\n\t\t\t\t\t\tnewService.splice(index, 1);\n\t\t\t\t\t\tsetMyService([...newService]);\n\t\t\t\t\t\tAlert('Service Removed Successfully', {\n\t\t\t\t\t\t\ticon: 'success',\n\t\t\t\t\t\t});\n\t\t\t\t\t})\n\t\t\t\t\t.catch(({ message }) => {\n\t\t\t\t\t\tnotify.addNotification(\n\t\t\t\t\t\t\talertMessage({ title: 'error', message, type: 'danger' })\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tsetApiLoading(false);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tAlert('Your imaginary you is safe!');\n\t\t\t}\n\t\t});\n\t};\n\tconst updateService = (serviceDetails) => {\n\t\thistory.push('/edit-service', { serviceDetails });\n\t};\n\treturn (\n\t\t<div className='container container-all'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='container-fluid'>\n\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t<ReactLoading isShow={apiLoading} />\n\t\t\t\t\t\t<div className='col-lg-12 mt-3'>\n\t\t\t\t\t\t\t<h2>My Services</h2>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{loading\n\t\t\t\t\t\t\t? [1, 2, 3].map((val) => (\n\t\t\t\t\t\t\t\t\t<div className='col-lg-4 mt-3' key={val}>\n\t\t\t\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t\t\t\t<Skeleton height={230} />\n\t\t\t\t\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='card-title'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Skeleton width={220} />\n\t\t\t\t\t\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='card-text'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Skeleton width={160} />\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t  ))\n\t\t\t\t\t\t\t: myService.map(({ id, name, image, price, ...rest }, index) => (\n\t\t\t\t\t\t\t\t\t<div className='col-lg-4 mt-3' key={id}>\n\t\t\t\t\t\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t\t\t\t\t\t<Image\n\t\t\t\t\t\t\t\t\t\t\t\tclassName='card-img-top provider-work-image'\n\t\t\t\t\t\t\t\t\t\t\t\turl={image || 'http://via.placeholder.com/300x180'}\n\t\t\t\t\t\t\t\t\t\t\t\talt='Card image cap'\n\t\t\t\t\t\t\t\t\t\t\t\theight='250px'\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t\t\t\t\t\t<h5 className='card-title'>{name}</h5>\n\t\t\t\t\t\t\t\t\t\t\t\t<p className='card-text'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>Price:</strong> ${price}\n\t\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<div className='card-footer'>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='d-flex justify-content-between'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-info'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tupdateService({ id, name, image, price, ...rest })\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tUpdate\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='btn btn-danger'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => removeService(id, index)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tRemove\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t  ))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default memo(GetServices);\n","import { POST, GET, Delete, PUT } from 'utils';\nimport {\n\tservice,\n\tremoveService,\n\teditService,\n\tstripeConnect,\n} from 'constants/apiEndpoint';\nexport const addService = (data) => {\n\tconst formData = new FormData();\n\tformData.append('name', data.name);\n\tformData.append('price', data.price);\n\tformData.append('category_id', data.category_id);\n\tformData.append('image', data.image);\n\tformData.append('description', data.description);\n\treturn POST(service, formData);\n};\n\nexport const getAllService = () => GET(service, { limit: 30 });\nexport const deleteService = (id) => Delete(removeService(id));\nexport const updateService = (data) => {\n\tconst formData = new FormData();\n\tformData.append('name', data.name);\n\tformData.append('price', data.price);\n\tformData.append('category_id', data.category_id);\n\tformData.append('image', data.image);\n\tformData.append('description', data.description);\n\treturn PUT(editService(data.id), formData);\n};\n\nexport const stripeConnectSuccess = (data) => POST(stripeConnect, data);\n"],"sourceRoot":""}