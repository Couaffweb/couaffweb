{"version":3,"sources":["pages/web/Services/AddService.js","pages/web/Services/apis.js","pages/web/Services/constants.js"],"names":["AddService","useState","serviceValue","service","setService","serviceImage","setServiceImage","formError","setFormError","loading","setLoading","className","isShow","handleFile","target","name","files","URL","createObjectURL","checkError","value","checkRequiredField","removeError","handleInput","handleSubmit","event","preventDefault","errors","checkAllRequiredFieldsWithKey","Object","values","some","length","checkAllField","addService","then","message","notify","addNotification","alertMessage","title","catch","type","finally","memo","data","formData","FormData","append","price","category_id","image","description","POST","getAllService","GET","limit","deleteService","id","Delete","removeService","updateService","PUT","editService"],"mappings":"mMAWMA,EAAa,WAAO,IAAD,EACMC,mBAASC,KADf,mBACjBC,EADiB,KACRC,EADQ,OAEgBH,qBAFhB,mBAEjBI,EAFiB,KAEHC,EAFG,OAGUL,mBAASC,KAHnB,mBAGjBK,EAHiB,KAGNC,EAHM,OAIMP,oBAAS,GAJf,mBAIjBQ,EAJiB,KAIRC,EAJQ,KAgDxB,OACC,sBAAKC,UAAU,0BAAf,UACC,cAAC,IAAD,CAAcC,OAAQH,IACtB,qBAAKE,UAAU,MAAf,SACC,qBAAKA,UAAU,YAAf,SACC,qBAAKA,UAAU,OAAf,SACC,sBAAKA,UAAU,YAAf,UACC,oBAAIA,UAAU,gCAAd,gCAGA,oBAAIA,UAAU,SAEd,qBAAKA,UAAU,MAAf,SACC,qBAAKA,UAAU,uBAAf,SACC,cAAC,IAAD,CACCE,WA1DU,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACrCZ,EAAW,2BAAKD,GAAN,kBAAgBY,EAAOC,EAAM,MACvCV,EAAgBW,IAAIC,gBAAgBF,EAAM,MAyDlCG,WAjDU,SAAC,GAAiC,IAAD,IAA9BL,OAAUC,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MACrCZ,EAAa,2BAAKD,GAAcc,YAAmBN,EAAMK,MAiDjDE,YArDW,SAAC,GAA0B,IAAdP,EAAa,EAAvBD,OAAUC,KAChCP,EAAa,2BAAKD,GAAN,kBAAkBQ,EAAO,OAqD7BR,UAAWA,EACXJ,QAASA,EACToB,YA3DW,SAAC,GAAiC,IAAD,IAA9BT,OAAUC,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MACtChB,EAAW,2BAAKD,GAAN,kBAAgBY,EAAOK,MA2DzBI,aA9CY,SAACC,GACrBA,EAAMC,iBANe,WACrB,IAAMC,EAASC,YAA8B1B,IAAcC,GAE3D,OADAK,EAAa,2BAAKD,GAAcoB,IACzBE,OAAOC,OAAOH,GAAQI,MAAK,SAACX,GAAD,OAAWA,EAAMY,OAAS,KAIvDC,KACJvB,GAAW,GACXwB,YAAW/B,GACTgC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACRC,QAAOC,gBACNC,YAAa,CACZC,MAAO,UACPJ,aAGFhC,EAAW,eAAKF,MAChBI,EAAgB,OAEhBmC,OAAM,YAAkB,IAAfL,EAAc,EAAdA,QACTC,QAAOC,gBACNC,YAAa,CAAEC,MAAO,QAASJ,UAASM,KAAM,eAG/CC,SAAQ,WACRjC,GAAW,QA0BNL,aAAcA,qBAYTuC,yBAAK5C,I,gCC7FpB,4JAOakC,EAAa,SAACW,GAC1B,IAAMC,EAAW,IAAIC,SAMrB,OALAD,EAASE,OAAO,OAAQH,EAAK9B,MAC7B+B,EAASE,OAAO,QAASH,EAAKI,OAC9BH,EAASE,OAAO,cAAeH,EAAKK,aACpCJ,EAASE,OAAO,QAASH,EAAKM,OAC9BL,EAASE,OAAO,cAAeH,EAAKO,aAC7BC,YAAKlD,IAAS2C,IAGTQ,EAAgB,kBAAMC,YAAIpD,IAAS,CAAEqD,MAAO,MAC5CC,EAAgB,SAACC,GAAD,OAAQC,YAAOC,YAAcF,KAC7CG,EAAgB,SAAChB,GAC7B,IAAMC,EAAW,IAAIC,SAMrB,OALAD,EAASE,OAAO,OAAQH,EAAK9B,MAC7B+B,EAASE,OAAO,QAASH,EAAKI,OAC9BH,EAASE,OAAO,cAAeH,EAAKK,aACpCJ,EAASE,OAAO,QAASH,EAAKM,OAC9BL,EAASE,OAAO,cAAeH,EAAKO,aAC7BU,YAAIC,YAAYlB,EAAKa,IAAKZ,K,gCC1BlC,kCAAO,IAAM5C,EAAe,CAC3Ba,KAAM,GACNkC,MAAO,GACPE,MAAO,GACPD,YAAa,GACbE,YAAa","file":"static/js/add-service.cc48c088.chunk.js","sourcesContent":["import React, { memo, useState } from 'react';\nimport { ReactLoading, AddServiceForm } from 'component';\nimport { store as notify } from 'react-notifications-component';\nimport {\n\tcheckRequiredField,\n\tcheckAllRequiredFieldsWithKey,\n\talertMessage,\n} from 'utils';\n\nimport { serviceValue } from './constants';\nimport { addService } from './apis';\nconst AddService = () => {\n\tconst [service, setService] = useState(serviceValue);\n\tconst [serviceImage, setServiceImage] = useState();\n\tconst [formError, setFormError] = useState(serviceValue);\n\tconst [loading, setLoading] = useState(false);\n\tconst handleFile = ({ target: { name, files } }) => {\n\t\tsetService({ ...service, [name]: files[0] });\n\t\tsetServiceImage(URL.createObjectURL(files[0]));\n\t};\n\tconst handleInput = ({ target: { name, value } }) => {\n\t\tsetService({ ...service, [name]: value });\n\t};\n\tconst removeError = ({ target: { name } }) => {\n\t\tsetFormError({ ...formError, [name]: '' });\n\t};\n\tconst checkError = ({ target: { name, value } }) => {\n\t\tsetFormError({ ...formError, ...checkRequiredField(name, value) });\n\t};\n\tconst checkAllField = () => {\n\t\tconst errors = checkAllRequiredFieldsWithKey(serviceValue, service);\n\t\tsetFormError({ ...formError, ...errors });\n\t\treturn Object.values(errors).some((value) => value.length > 0);\n\t};\n\tconst handleSubmit = (event) => {\n\t\tevent.preventDefault();\n\t\tif (!checkAllField()) {\n\t\t\tsetLoading(true);\n\t\t\taddService(service)\n\t\t\t\t.then(({ message }) => {\n\t\t\t\t\tnotify.addNotification(\n\t\t\t\t\t\talertMessage({\n\t\t\t\t\t\t\ttitle: 'Success',\n\t\t\t\t\t\t\tmessage,\n\t\t\t\t\t\t})\n\t\t\t\t\t);\n\t\t\t\t\tsetService({ ...serviceValue });\n\t\t\t\t\tsetServiceImage('');\n\t\t\t\t})\n\t\t\t\t.catch(({ message }) => {\n\t\t\t\t\tnotify.addNotification(\n\t\t\t\t\t\talertMessage({ title: 'error', message, type: 'danger' })\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t\t.finally(() => {\n\t\t\t\t\tsetLoading(false);\n\t\t\t\t});\n\t\t}\n\t};\n\treturn (\n\t\t<div className='container container-all'>\n\t\t\t<ReactLoading isShow={loading} />\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-lg-12'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t<h1 className='d-flex justify-content-center'>\n\t\t\t\t\t\t\t\t+ Add your Service\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<hr className='line' />\n\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col-md-6 offset-md-3'>\n\t\t\t\t\t\t\t\t\t<AddServiceForm\n\t\t\t\t\t\t\t\t\t\thandleFile={handleFile}\n\t\t\t\t\t\t\t\t\t\tcheckError={checkError}\n\t\t\t\t\t\t\t\t\t\tremoveError={removeError}\n\t\t\t\t\t\t\t\t\t\tformError={formError}\n\t\t\t\t\t\t\t\t\t\tservice={service}\n\t\t\t\t\t\t\t\t\t\thandleInput={handleInput}\n\t\t\t\t\t\t\t\t\t\thandleSubmit={handleSubmit}\n\t\t\t\t\t\t\t\t\t\tserviceImage={serviceImage}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default memo(AddService);\n","import { POST, GET, Delete, PUT } from 'utils';\nimport {\n\tservice,\n\tremoveService,\n\teditService,\n\tstripeConnect,\n} from 'constants/apiEndpoint';\nexport const addService = (data) => {\n\tconst formData = new FormData();\n\tformData.append('name', data.name);\n\tformData.append('price', data.price);\n\tformData.append('category_id', data.category_id);\n\tformData.append('image', data.image);\n\tformData.append('description', data.description);\n\treturn POST(service, formData);\n};\n\nexport const getAllService = () => GET(service, { limit: 30 });\nexport const deleteService = (id) => Delete(removeService(id));\nexport const updateService = (data) => {\n\tconst formData = new FormData();\n\tformData.append('name', data.name);\n\tformData.append('price', data.price);\n\tformData.append('category_id', data.category_id);\n\tformData.append('image', data.image);\n\tformData.append('description', data.description);\n\treturn PUT(editService(data.id), formData);\n};\n\nexport const stripeConnectSuccess = (data) => POST(stripeConnect, data);\n","export const serviceValue = {\n\tname: '',\n\tprice: '',\n\timage: '',\n\tcategory_id: '',\n\tdescription: '',\n};\n"],"sourceRoot":""}