{"version":3,"sources":["pages/web/ProviderEarning/index.js","pages/web/ProviderEarning/apis.js"],"names":["ProviderEarning","location","history","useState","loading","setLoading","tranSectionList","setTranSectionList","totalBalance","setTotalBalance","parseInt","parseUrl","search","currentPage","setCurrentPage","totalPage","setTotalPage","useEffect","getTransections","code","URLSearchParams","get","data","POST","stripeConnect","then","message","notify","addNotification","alertMessage","title","setUserInfo","push","catch","type","finally","params","page","limit","GET","getAllTransectionList","walletAmount","allTransection","pagination","handlePage","useCallback","pageNo","className","isShow","authInfo","stripe_id","disabled","onClick","Alert","text","icon","buttons","dangerMode","willDelete","amountTranfer","unshift","href","process","url","priceFormate","scope","map","index","id","bookingId","created","amount","transactionType","aria-hidden","dateFormate","length","pageRangeDisplayed","onChange"],"mappings":"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","file":"static/js/provider-earning.2e380fcb.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { store as notify } from 'react-notifications-component';\nimport Alert from 'sweetalert';\nimport { ReactLoading, Image, Paginations } from 'component';\nimport {\n\tauthInfo,\n\talertMessage,\n\tsetUserInfo,\n\tparseUrl,\n\tdateFormate,\n\tpriceFormate,\n} from 'utils';\nimport {\n\tstripeConnectSuccess,\n\tgetTransectionHistory,\n\ttranferFund,\n} from './apis';\nconst ProviderEarning = ({ location, history }) => {\n\tconst [loading, setLoading] = useState(false);\n\tconst [tranSectionList, setTranSectionList] = useState([]);\n\tconst [totalBalance, setTotalBalance] = useState(0);\n\tconst [currentPage, setCurrentPage] = useState(\n\t\tparseInt(parseUrl(history.location.search, 'page')) || 1\n\t);\n\tconst [totalPage, setTotalPage] = useState(1);\n\tuseEffect(() => {\n\t\tgetTransections();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [currentPage]);\n\tuseEffect(() => {\n\t\tif (location.search) {\n\t\t\tconst code = new URLSearchParams(location.search).get('code');\n\t\t\tif (code) {\n\t\t\t\tsetLoading(true);\n\t\t\t\tstripeConnectSuccess({ code })\n\t\t\t\t\t.then(({ data, message }) => {\n\t\t\t\t\t\tnotify.addNotification(alertMessage({ title: 'Success', message }));\n\t\t\t\t\t\tsetUserInfo(data);\n\t\t\t\t\t\thistory.push('/earning');\n\t\t\t\t\t})\n\t\t\t\t\t.catch(({ message }) => {\n\t\t\t\t\t\tnotify.addNotification(\n\t\t\t\t\t\t\talertMessage({ title: 'error', message, type: 'danger' })\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [location.search]);\n\tconst getTransections = () => {\n\t\tsetLoading(true);\n\t\tgetTransectionHistory({ page: currentPage, limit: 20 })\n\t\t\t.then(\n\t\t\t\t({\n\t\t\t\t\tdata: { walletAmount = 0, allTransection = [], pagination = {} },\n\t\t\t\t}) => {\n\t\t\t\t\tsetTotalBalance(walletAmount);\n\t\t\t\t\tsetTotalPage(pagination.totalPage);\n\t\t\t\t\tsetTranSectionList(allTransection);\n\t\t\t\t}\n\t\t\t)\n\t\t\t.catch(({ message }) => {\n\t\t\t\tnotify.addNotification(\n\t\t\t\t\talertMessage({ title: 'error', message, type: 'danger' })\n\t\t\t\t);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t};\n\tconst handlePage = useCallback(\n\t\t(pageNo) => {\n\t\t\tsetCurrentPage(pageNo);\n\t\t},\n\t\t[setCurrentPage]\n\t);\n\tconst withdrawalFund = () => {\n\t\tAlert({\n\t\t\ttitle: 'Are you sure want to withdrawal amount?',\n\t\t\ttext: '',\n\t\t\ticon: 'warning',\n\t\t\tbuttons: true,\n\t\t\tdangerMode: true,\n\t\t}).then((willDelete) => {\n\t\t\tif (willDelete) {\n\t\t\t\tsetLoading(true);\n\t\t\t\ttranferFund()\n\t\t\t\t\t.then(({ message, data }) => {\n\t\t\t\t\t\ttranSectionList.unshift(data);\n\t\t\t\t\t\tsetTotalBalance(0);\n\t\t\t\t\t\tAlert('success', message, 'success');\n\t\t\t\t\t})\n\t\t\t\t\t.catch(({ message }) => {\n\t\t\t\t\t\tnotify.addNotification(\n\t\t\t\t\t\t\talertMessage({ title: 'error', message, type: 'danger' })\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t\t.finally(() => {\n\t\t\t\t\t\tsetLoading(false);\n\t\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tAlert('Proccess cancel');\n\t\t\t}\n\t\t});\n\t};\n\treturn (\n\t\t<div className='container container-all'>\n\t\t\t<ReactLoading isShow={loading} />\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-lg-12'>\n\t\t\t\t\t{authInfo().stripe_id ? (\n\t\t\t\t\t\t<div className='strip-account-div'>\n\t\t\t\t\t\t\t<h5>\n\t\t\t\t\t\t\t\t<br /> You can only withdrawal amount when you have more then 10\n\t\t\t\t\t\t\t\t$\n\t\t\t\t\t\t\t</h5>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tdisabled={totalBalance < 10}\n\t\t\t\t\t\t\t\tonClick={withdrawalFund}\n\t\t\t\t\t\t\t\tclassName='btn btn-primary'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tWithdrawal Amount\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className='strip-account-div'>\n\t\t\t\t\t\t\t<h2>Please connect your stripe account for withdrawal</h2>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref={`https://connect.stripe.com/oauth/authorize?response_type=code&client_id=${process.env.REACT_APP_STRIPE_TOKEN}&scope=read_write`}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<Image url='/assest/images/connectButton.png' />{' '}\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t<div className='col-lg-12'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<div className='card-header card-header-fix'>\n\t\t\t\t\t\t\t<div>My Transactions</div>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<strong>Amount Avaiable : {priceFormate(totalBalance)} </strong>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t<table className='table table-striped table-responsive-sm table-responsive-md'>\n\t\t\t\t\t\t\t\t<thead className='thead-dark'>\n\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t<th scope='col' className='td-center'>\n\t\t\t\t\t\t\t\t\t\t\t#\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t<th scope='col' className='td-center'>\n\t\t\t\t\t\t\t\t\t\t\tBooking Id\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t<th scope='col' className='td-center'>\n\t\t\t\t\t\t\t\t\t\t\tAmount\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t<th scope='col' className='td-center'>\n\t\t\t\t\t\t\t\t\t\t\tTransaction Type\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t<th scope='col' className='td-center'>\n\t\t\t\t\t\t\t\t\t\t\tTotal Balance\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t\t<th scope='col' className='td-center'>\n\t\t\t\t\t\t\t\t\t\t\tDate\n\t\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{tranSectionList.map(\n\t\t\t\t\t\t\t\t\t\t(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\t\t\t\t\t\tbookingId,\n\t\t\t\t\t\t\t\t\t\t\t\tcreated,\n\t\t\t\t\t\t\t\t\t\t\t\tamount,\n\t\t\t\t\t\t\t\t\t\t\t\ttransactionType,\n\t\t\t\t\t\t\t\t\t\t\t\ttotalBalance,\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\tindex\n\t\t\t\t\t\t\t\t\t\t) => (\n\t\t\t\t\t\t\t\t\t\t\t<tr key={id}>\n\t\t\t\t\t\t\t\t\t\t\t\t<th scope='row'>{index + 1}</th>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='td-center'>{bookingId}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='td-center'>{priceFormate(amount)}</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='td-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{transactionType === 0 ? 'Credit' : 'Withdrawal'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`ml-1 fa fa-arrow-${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttransactionType === 0 ? 'up' : 'down'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taria-hidden='true'\n\t\t\t\t\t\t\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='td-center'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{priceFormate(totalBalance)}\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td className='td-center'>{dateFormate(created)}</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t</table>\n\n\t\t\t\t\t\t\t{tranSectionList.length === 0 && (\n\t\t\t\t\t\t\t\t<h2 className='error-text d-flex justify-content-center'>\n\t\t\t\t\t\t\t\t\tNo Record found\n\t\t\t\t\t\t\t\t</h2>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<div className='pagination-div'>\n\t\t\t\t\t\t\t\t<Paginations\n\t\t\t\t\t\t\t\t\tclassName='pagination2'\n\t\t\t\t\t\t\t\t\tcurrentPage={currentPage}\n\t\t\t\t\t\t\t\t\tpageRangeDisplayed={5}\n\t\t\t\t\t\t\t\t\ttotalPage={totalPage}\n\t\t\t\t\t\t\t\t\tonChange={handlePage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default ProviderEarning;\n","import { GET, POST } from 'utils';\nimport {\n\tstripeConnect,\n\tgetAllTransectionList,\n\tamountTranfer,\n} from 'constants/apiEndpoint';\nexport const stripeConnectSuccess = (data) => POST(stripeConnect, data);\nexport const getTransectionHistory = (params) =>\n\tGET(getAllTransectionList, params);\nexport const tranferFund = () => POST(amountTranfer);\n"],"sourceRoot":""}