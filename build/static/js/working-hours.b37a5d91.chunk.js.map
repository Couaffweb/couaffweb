{"version":3,"sources":["pages/web/WorkingHours/constants.js","pages/web/WorkingHours/index.js","pages/web/WorkingHours/apis.js"],"names":["workingHours","openTime","closeTime","day","WorkingHours","history","useHistory","authInfo","working_hours","id","useState","loading","setLoading","Hours","setWorkingHours","useEffect","JSON","parse","handleInput","val","key","index","currentState","stringify","setHour","time","date","Date","getHours","split","setHours","classNameName","isShow","className","onSubmit","e","data","preventDefault","POST","editProfile","then","notify","addNotification","alertMessage","title","message","setUserInfo","push","catch","type","finally","map","showTimeSelect","showTimeSelectOnly","timeIntervals","disableClock","timeCaption","placeholder","dateFormat","timeClassName","amPmAriaLabel","name","format","disabled","placeholderText","value","onChange","target","hours","addZero","min","getMinutes","checked","valueOpen","valueClose","memo"],"mappings":"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","file":"static/js/working-hours.b37a5d91.chunk.js","sourcesContent":["export const workingHours = [\n\t{\n\t\topenTime: '9:00',\n\t\tcloseTime: '17:00',\n\t\tday: 'Sunday',\n\t},\n\t{\n\t\topenTime: '9:00',\n\t\tcloseTime: '17:00',\n\t\tday: 'Monday',\n\t},\n\t{\n\t\topenTime: '9:00',\n\t\tcloseTime: '17:00',\n\t\tday: 'Tuesday',\n\t},\n\t{\n\t\topenTime: '9:00',\n\t\tcloseTime: '17:00',\n\t\tday: 'Wednesday',\n\t},\n\t{\n\t\topenTime: '9:00',\n\t\tcloseTime: '17:00',\n\t\tday: 'Thursday',\n\t},\n\t{\n\t\topenTime: '9:00',\n\t\tcloseTime: '17:00',\n\t\tday: 'Friday',\n\t},\n\t{\n\t\topenTime: '9:00',\n\t\tcloseTime: '17:00',\n\t\tday: 'Saturday',\n\t},\n];\n","import React, { memo, useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { store as notify } from 'react-notifications-component';\nimport { ReactLoading, Form, DatePicker, Input } from 'component';\nimport { addZero, authInfo, alertMessage, setUserInfo } from 'utils';\nimport { workingHours as Hours } from './constants';\nimport { updateProfile } from './apis';\nconst WorkingHours = () => {\n\tconst history = useHistory();\n\tconst { working_hours, id } = authInfo();\n\tconst [loading, setLoading] = useState(false);\n\tconst [workingHours, setWorkingHours] = useState(Hours);\n\tuseEffect(() => {\n\t\tif (working_hours) {\n\t\t\tsetWorkingHours(JSON.parse(working_hours));\n\t\t}\n\t}, [working_hours]);\n\tconst handleInput = (val, key, index) => {\n\t\tconst currentState = JSON.parse(JSON.stringify(workingHours));\n\t\tcurrentState[index][key] = val;\n\t\tsetWorkingHours([...currentState]);\n\t};\n\tconst setHour = (time) => {\n\t\tif (time === 'closed') return null;\n\t\tconst date = new Date();\n\t\tconst getHours = time.split(':');\n\t\tdate.setHours(getHours[0], getHours[1], 0);\n\t\treturn date;\n\t};\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\t\tupdateProfile({ id, working_hours: JSON.stringify(workingHours) })\n\t\t\t.then(({ data }) => {\n\t\t\t\tnotify.addNotification(\n\t\t\t\t\talertMessage({\n\t\t\t\t\t\ttitle: 'Success',\n\t\t\t\t\t\tmessage: 'Profile Updated successfully',\n\t\t\t\t\t})\n\t\t\t\t);\n\t\t\t\tsetUserInfo(data);\n\t\t\t\thistory.push(working_hours ? '/profile' : '/add-service');\n\t\t\t})\n\t\t\t.catch(({ message }) => {\n\t\t\t\tnotify.addNotification(\n\t\t\t\t\talertMessage({ title: 'error', message, type: 'danger' })\n\t\t\t\t);\n\t\t\t})\n\t\t\t.finally(() => {\n\t\t\t\tsetLoading(false);\n\t\t\t});\n\t};\n\treturn (\n\t\t<div classNameName='container container-all'>\n\t\t\t<ReactLoading isShow={loading} />\n\t\t\t<div classNameName='row'>\n\t\t\t\t<div classNameName='col-lg-12'>\n\t\t\t\t\t<div className='card'>\n\t\t\t\t\t\t<div className='card-body'>\n\t\t\t\t\t\t\t<h1 className='d-flex justify-content-center'>Working Hours</h1>\n\t\t\t\t\t\t\t<hr className='line' />\n\t\t\t\t\t\t\t<div className='row'>\n\t\t\t\t\t\t\t\t<div className='col-lg-8 offset-md-2'>\n\t\t\t\t\t\t\t\t\t<Form onSubmit={handleSubmit}>\n\t\t\t\t\t\t\t\t\t\t{workingHours.map(({ day, openTime, closeTime }, index) => (\n\t\t\t\t\t\t\t\t\t\t\t<div className='row time-zone' key={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div className='col-sm-12 list'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mb-2 row justify-content-between px-3'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<strong>{day} : </strong>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mob'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='text-grey mr-1'>From</label>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowTimeSelect\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowTimeSelectOnly\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeIntervals={30}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableClock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeCaption='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdateFormat='h:mm aa'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeClassName={() => 'text-success'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tamPmAriaLabel={'Select AM/PM'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='openTime'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat='hh:mm:ss a'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={closeTime === 'closed'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholderText={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcloseTime === 'closed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Closed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'Open Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={setHour(openTime)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={({ target: { value, name } }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst date = new Date(value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst hours = addZero(date.getHours());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst min = addZero(date.getMinutes());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleInput(`${hours}:${min}`, name, index);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mob mb-1'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='text-grey mr-4'>To</label>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowTimeSelect\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowTimeSelectOnly\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeIntervals={30}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisableClock\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeCaption='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder='Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdateFormat='h:mm aa'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeClassName={() => 'text-success'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tamPmAriaLabel={'Select AM/PM'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname='closeTime'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tformat='hh:mm:ss a'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={closeTime === 'closed'}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholderText={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcloseTime === 'closed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? 'Closed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: 'Close Time'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={setHour(closeTime)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={({ target: { value, name } }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst date = new Date(value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst hours = addZero(date.getHours());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst min = addZero(date.getMinutes());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandleInput(`${hours}:${min}`, name, index);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<div className='mob mb-1'>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<label className='text-grey'>Close</label>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName='form-control'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\topenTime === 'closed' ||\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcloseTime === 'closed'\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={({ target: { checked } }) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst date = new Date();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst hours = addZero(date.getHours());\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet valueOpen = `${hours}:00`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet valueClose = `${hours + 1}:00`;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (checked) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalueOpen = valueClose = 'closed';\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst currentState = JSON.parse(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(workingHours)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentState[index]['openTime'] = valueOpen;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentState[index]['closeTime'] = valueClose;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsetWorkingHours([...currentState]);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>{' '}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t<div className='row mt-5 d-flex justify-content-center'>\n\t\t\t\t\t\t\t\t\t\t\t<button className='btn btn-info'>\n\t\t\t\t\t\t\t\t\t\t\t\t{!working_hours ? 'Save' : 'Update'} Working hours\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t\t\t\t<hr className='line' />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default memo(WorkingHours);\n","import { POST } from 'utils';\nimport { editProfile } from 'constants/apiEndpoint';\nexport const updateProfile = (data) => POST(editProfile, data);\n"],"sourceRoot":""}